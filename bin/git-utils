#!/bin/bash

function usage()
{
    echo "usage: git-utils <command>"
    echo -e "available commands are : \n"
    echo -e "see-large-files \t prints a list of the biggest files"

    exit
}

# @see http://stubbisms.wordpress.com/2009/07/10/git-script-to-show-largest-pack-objects-and-trim-your-waist-line/
# @author Antony Stubbs
function seeLargeFiles()
{
    echo "large files"
    IFS=$'\n';

    # list all objects including their size, sort by size, take top 10
    objects=`git verify-pack -v .git/objects/pack/pack-*.idx | grep -v objet | sort -k3gr | head -n 25`
    #objects=`cat elements-git.txt | sort -k3gr | head -n 25`
    echo "All sizes are in kB's. The pack column is the size of the object, compressed, inside the pack file."

    output="size,pack,SHA,location"
    for y in $objects
    do
        # echo $y
        # extract the size in bytes
        size=$((`echo $y | cut -f 5 -d ' '`))
        # extract the compressed size in bytes
        compressedSize=$((`echo $y | cut -f 6 -d ' '`))
        # extract the SHA
        sha=`echo $y | cut -f 1 -d ' '`
        # find the objects location in the repository tree
        other=`git rev-list --all --objects | grep $sha`
        #lineBreak=`echo -e "\n"`
        output="${output}\n${size},${compressedSize},${other}"
    done

    echo -e $output | column -t -s ', '

}

case $1 in
     see-large-files ) seeLargeFiles;;
     *) usage;;
esac